apiVersion: v1
kind: Service
metadata:
  name: app-service
  labels:
    app: app
spec:
  externalTrafficPolicy: Cluster
  type: LoadBalancer
  ports:
  - name: app-port
    nodePort: 30303
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: app
  sessionAffinity: ClientIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: app-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/session-cookie-name: "INGRESSCOOKIE"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
spec:
  rules: 
    - http:
        paths:
          - path: /
            backend:
              serviceName: app-service
              servicePort: app-port
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: app
  namespace: stateful-app
spec:
  serviceName: "app"
  replicas: 3
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: app
        image: app
        envFrom:
        - configMapRef:
            name: app-configmap
        ports:
        - containerPort: 8080
          name: app
        volumeMounts:
        - name: app-data
          mountPath: /usr/app
  volumeClaimTemplates:
  - metadata:
      name: app-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      #TODO
      #storageClassName: manual
      resources:
        requests:
          storage: 1Gi