version: "3.9"

services:
  app:
    build: app/.
    ports:
      - "8080:8080"
    environment:
      # - IS_STATEFUL=false
      - POSTGRES_NAME=gorm
      - POSTGRES_USER=gorm
      - POSTGRES_PASSWORD=gorm
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
  postgres:
    image: postgres:13.4
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=gorm
      - POSTGRES_USER=gorm
      - POSTGRES_PASSWORD=gorm
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./configs/otel-collector.yaml:/etc/otel-collector-config.yaml
  prometheus:
    image: prom/prometheus:latest
    command: [ "--config.file=/etc/prometheus.yaml" ]
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
  jaeger:
    image: jaegertracing/all-in-one:1.35
    volumes:
      - "./configs/jaeger-ui.json:/etc/jaeger/jaeger-ui.json"
    command: --query.ui-config /etc/jaeger/jaeger-ui.json
    ports:
      - 16686:16686
      - 4318:4318
    environment:
      # - COLLECTOR_OTLP_ENABLED=true
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
  redis:
    image: redis:7.0.0
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
    volumes:
      - redis-data:/data
volumes:
  postgres-data:
  redis-data:
